{"ast":null,"code":"import { FILTER_BY_ACTIVITIES, FILTER_BY_CONTINENT, GET_ACTIVITIES, GET_COUNTRIES, GET_DETAIL, ORDER_BY_NAME, ORDER_BY_POPULATION, POST_ACTIVITIES, SEARCH_COUNTRIES } from './Redux/actions-types.js';\nconst initialState = {\n  loading: true,\n  countries: [],\n  quest: [],\n  details: [],\n  filtered: [],\n  activities: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        loading: false,\n        countries: action.payload\n      };\n    case SEARCH_COUNTRIES:\n      return {\n        ...state,\n        quest: action.payload\n      };\n    case GET_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload\n      };\n    case GET_DETAIL:\n      return {\n        ...state,\n        details: action.payload\n      };\n    case FILTER_BY_CONTINENT:\n      const filterByContinent = action.payload === \"ALL\" ? state.countries : state.countries.filter(country => country.continent === action.payload);\n      return {\n        ...state,\n        filtered: filterByContinent\n      };\n    case FILTER_BY_ACTIVITIES:\n      const filterByActivities = state.countries.filter(country => country.activities.find(activity => activity.name === action.payload));\n      if (action.payload === 'ALL') {\n        return {\n          ...state,\n          fitered: state.countries\n        };\n      } else {\n        return {\n          ...state,\n          filtered: filterByActivities\n        };\n      }\n    case POST_ACTIVITIES:\n      return {\n        ...state\n      };\n    case ORDER_BY_NAME:\n      const orderByName = action.payload === \"ASCENDANT\" ? state.countries.sort((a, b) => {\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      }) : state.countries.sort((a, b) => {\n        if (a.name < b.name) return 1;\n        if (a.name > b.name) return -1;\n        return 0;\n      });\n      return {\n        ...state,\n        filtered: orderByName\n      };\n    case ORDER_BY_POPULATION:\n      const orderByPopulation = action.payload === \"MAJOR\" ? state.countries.sort((a, b) => {\n        if (a.population < b.population) return 1;\n        if (a.population > b.population) return -1;\n        return 0;\n      }) : state.countries.sort((a, b) => {\n        if (a.population < b.population) return -1;\n        if (a.population > b.population) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        filtered: orderByPopulation\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["FILTER_BY_ACTIVITIES","FILTER_BY_CONTINENT","GET_ACTIVITIES","GET_COUNTRIES","GET_DETAIL","ORDER_BY_NAME","ORDER_BY_POPULATION","POST_ACTIVITIES","SEARCH_COUNTRIES","initialState","loading","countries","quest","details","filtered","activities","rootReducer","state","arguments","length","undefined","action","type","payload","filterByContinent","filter","country","continent","filterByActivities","find","activity","name","fitered","orderByName","sort","a","b","orderByPopulation","population"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Redux/reducer.js"],"sourcesContent":["import { FILTER_BY_ACTIVITIES, FILTER_BY_CONTINENT, GET_ACTIVITIES, GET_COUNTRIES, GET_DETAIL, \r\n    ORDER_BY_NAME, ORDER_BY_POPULATION, POST_ACTIVITIES, SEARCH_COUNTRIES } from './Redux/actions-types.js';\r\n\r\nconst initialState = {\r\n    loading : true,\r\n    countries : [],\r\n    quest : [],\r\n    details : [],\r\n    filtered : [],\r\n    activities : []\r\n}\r\n\r\nexport default function rootReducer( state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case GET_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                countries : action.payload\r\n            }\r\n\r\n        case SEARCH_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                quest : action.payload\r\n            }\r\n\r\n        case GET_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n                activities: action.payload\r\n            }\r\n\r\n        case GET_DETAIL:\r\n            return {\r\n                ...state,\r\n                details: action.payload\r\n            }\r\n\r\n        case FILTER_BY_CONTINENT:\r\n            const filterByContinent = action.payload === \"ALL\" ? state.countries : state.countries.filter (country => country.continent === action.payload)\r\n            return {\r\n                ...state,\r\n                filtered: filterByContinent\r\n            }\r\n\r\n        case FILTER_BY_ACTIVITIES:\r\n            const filterByActivities = state.countries.filter (country => country.activities.find(activity => activity.name === action.payload));\r\n            if (action.payload === 'ALL') {\r\n                return {\r\n                    ...state,\r\n                    fitered: state.countries\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    filtered: filterByActivities\r\n                }\r\n            }\r\n\r\n        case POST_ACTIVITIES: \r\n            return {...state}\r\n            \r\n        case ORDER_BY_NAME:\r\n            const orderByName = action.payload === \"ASCENDANT\" ? state.countries.sort ((a, b) => {\r\n                if (a.name < b.name) return -1;\r\n                if (a.name > b.name) return 1;\r\n                return 0;\r\n            }) : state.countries.sort((a, b) => {\r\n                if (a.name < b.name) return 1;\r\n                if (a.name > b.name) return -1;\r\n                return 0;\r\n            })\r\n            return {\r\n                ...state,\r\n                filtered: orderByName\r\n            }\r\n            \r\n            case ORDER_BY_POPULATION:\r\n                const orderByPopulation = action.payload === \"MAJOR\" ? state.countries.sort ((a, b) => {\r\n                    if (a.population < b.population) return 1;\r\n                    if (a.population > b.population) return -1;\r\n                    return 0;\r\n                }) : state.countries.sort((a, b) => {\r\n                    if (a.population < b.population) return -1;\r\n                    if (a.population > b.population) return 1;\r\n                    return 0;\r\n                })\r\n                return {\r\n                    ...state,\r\n                    filtered: orderByPopulation\r\n                }\r\n        \r\n        default: return state\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}