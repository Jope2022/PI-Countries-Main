{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopep\\\\Desktop\\\\PI-Countries-Main\\\\PI-Countries-main\\\\client\\\\src\\\\Components\\\\PaginatedDetalle\\\\PaginatedDetalle.jsx\",\n  _s = $RefreshSig$();\nimport Paginated from \"../Paginated/Paginated\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountries } from \"../redux/actions\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaginatedDetalle = () => {\n  _s();\n  const countries = useSelector(state => state.countries);\n  const dispatch = useDispatch();\n  const {\n    idPais\n  } = useParams();\n  const countriesPerPage = 10;\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalCountries = countries.length;\n  const totalPages = Math.ceil(totalCountries / countriesPerPage);\n  const paginated = Array.from({\n    length: totalPages\n  }, (_, index) => index + 1);\n  const lastCountry = currentPage * countriesPerPage;\n  const firstCountry = lastCountry - countriesPerPage;\n  const currentCountry = countries.slice(firstCountry, lastCountry);\n  const handleClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formDetalle\",\n    children: [/*#__PURE__*/_jsxDEV(Paginated, {\n      countriesPerPage: countriesPerPage,\n      totalCountries: totalCountries,\n      paginated: paginated,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerPag\",\n      children: currentCountry.map(country => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag ? country.flag : \"no hay banderas\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Continente: \", country.continent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, country.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PaginatedDetalle, \"aiERkLcHNlqvl3fO7fHpAzkZfNs=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n_c = PaginatedDetalle;\nexport default PaginatedDetalle;\nvar _c;\n$RefreshReg$(_c, \"PaginatedDetalle\");","map":{"version":3,"names":["Paginated","useEffect","useState","useDispatch","useSelector","useParams","getCountries","SearchBar","jsxDEV","_jsxDEV","PaginatedDetalle","_s","countries","state","dispatch","idPais","countriesPerPage","currentPage","setCurrentPage","totalCountries","length","totalPages","Math","ceil","paginated","Array","from","_","index","lastCountry","firstCountry","currentCountry","slice","handleClick","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","country","name","src","flag","alt","continent","_c","$RefreshReg$"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/PaginatedDetalle/PaginatedDetalle.jsx"],"sourcesContent":["import Paginated from \"../Paginated/Paginated\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getCountries } from \"../redux/actions\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nconst PaginatedDetalle = () => {\r\n  const countries = useSelector((state) => state.countries);\r\n  const dispatch = useDispatch();\r\n  const { idPais } = useParams();\r\n\r\n  const countriesPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalCountries = countries.length;\r\n  const totalPages = Math.ceil(totalCountries / countriesPerPage);\r\n\r\n  const paginated = Array.from({ length: totalPages }, (_, index) => index + 1);\r\n  const lastCountry = currentPage * countriesPerPage;\r\n  const firstCountry = lastCountry - countriesPerPage;\r\n  const currentCountry = countries.slice(firstCountry, lastCountry);\r\n\r\n  const handleClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    dispatch(getCountries());\r\n  }, [dispatch]);\r\n  \r\n  \r\n  return (\r\n    <div className=\"formDetalle\">\r\n      <Paginated\r\n        countriesPerPage={countriesPerPage}\r\n        totalCountries={totalCountries}\r\n        paginated={paginated}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <div className=\"containerPag\">\r\n        {currentCountry.map((country) => {\r\n          return (\r\n            <div className=\"\"  key={country.name}>\r\n              <p>{country.name}</p>\r\n              <img src={country.flag ? country.flag : \"no hay banderas\"} alt=\"\" />\r\n              <p>Continente: {country.continent}</p>\r\n            </div>\r\n          );\r\n        })} \r\n       </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginatedDetalle;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}