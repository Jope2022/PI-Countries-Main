{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopep\\\\Desktop\\\\PI-Countries-Main\\\\PI-Countries-main\\\\client\\\\src\\\\Components\\\\Country\\\\Country.jsx\";\nimport React from 'react';\nimport './Country.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Country = _ref => {\n  let {\n    name,\n    flag,\n    capital,\n    continent,\n    poblation\n  } = _ref;\n  const {\n    characters\n  } = {\n    name,\n    flag,\n    capital,\n    continent,\n    poblation\n  };\n  return !characters.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" \\xA1Busca un personaje!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this) : characters.map(char => /*#__PURE__*/_jsxDEV(Country, {\n    name: char.name,\n    flag: char.flag,\n    capital: char.capital,\n    continet: char.continent,\n    population: char.poblation\n    // onClose={() => props.onClose(char.id)} \n  }, char.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 34\n  }, this));\n};\n_c = Country;\nexport default Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Country","_ref","name","flag","capital","continent","poblation","characters","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","char","continet","population","_c","$RefreshReg$"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/Country/Country.jsx"],"sourcesContent":["import React from 'react';\r\nimport './Country.css';\r\n\r\nconst Country = ({name, flag, capital, continent, poblation}) => {\r\n     const { characters } = ({name, flag, capital, continent, poblation});\r\n     return (!characters.length === 0 ?\r\n           (<p  > Â¡Busca un personaje!</p>)\r\n    \r\n           :\r\n         (characters.map(char => <Country\r\n               key={char.name}\r\n               name={char.name}\r\n               flag={char.flag}\r\n               capital={char.capital}\r\n               continet={char.continent}\r\n               population={char.poblation}\r\n               // onClose={() => props.onClose(char.id)} \r\n               />\r\n             )))\r\n            } \r\n         \r\n\r\n\r\n\r\n\r\nexport default Country;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGC,IAAA,IAAiD;EAAA,IAAhD;IAACC,IAAI;IAAEC,IAAI;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAAL,IAAA;EACvD,MAAM;IAAEM;EAAW,CAAC,GAAI;IAACL,IAAI;IAAEC,IAAI;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAS,CAAE;EACpE,OAAQ,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,gBACzBT,OAAA;IAAAU,QAAA,EAAK;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,GAGhCN,UAAU,CAACO,GAAG,CAACC,IAAI,iBAAIhB,OAAA,CAACC,OAAO;IAE1BE,IAAI,EAAEa,IAAI,CAACb,IAAK;IAChBC,IAAI,EAAEY,IAAI,CAACZ,IAAK;IAChBC,OAAO,EAAEW,IAAI,CAACX,OAAQ;IACtBY,QAAQ,EAAED,IAAI,CAACV,SAAU;IACzBY,UAAU,EAAEF,IAAI,CAACT;IACjB;EAAA,GANKS,IAAI,CAACb,IAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAOZ,CACF;AACH,CAAC;AAAAK,EAAA,GAhBPlB,OAAO;AAsBb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}