{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopep\\\\Desktop\\\\PI-Countries-Main\\\\PI-Countries-main\\\\client\\\\src\\\\Components\\\\CountryDetail\\\\countryDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState, us } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetail = () => {\n  _s();\n  const {\n    input\n  } = useParams();\n  const [character, setCharacter] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:3001/countries?name=' + input).then(response => response.json()).then(char => {\n      if (char.name) {\n        setCharacter(char);\n      } else {\n        window.alert(\"No hay personajes con ese ID\");\n      }\n    }).catch(err => {\n      window.alert(\"No hay personajes con ese ID\");\n    });\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.flag,\n        alt: \"Not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Id: \", character.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Capital: \", character.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Continent: \", character.continent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"SubRegion: \", character.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Area: \", character.area]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Population: \", character.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryDetail, \"+We3lpMKHIusBnDzPdaP1YrE15c=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetail;\nexport default CountryDetail;\nvar _c;\n$RefreshReg$(_c, \"CountryDetail\");","map":{"version":3,"names":["React","useParams","useState","us","jsxDEV","_jsxDEV","CountryDetail","_s","input","character","setCharacter","useEffect","fetch","then","response","json","char","name","window","alert","catch","err","children","src","flag","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","capital","continent","subregion","area","population","_c","$RefreshReg$"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/CountryDetail/countryDetail.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useState, us } from 'react';\r\n\r\n\r\nconst CountryDetail = () => {\r\n  const { input } = useParams()\r\n  \r\n  const [character, setCharacter] = useState( {}); \r\n\r\n useEffect(() => {\r\n     fetch('http://localhost:3001/countries?name=' + input)\r\n         .then((response) => response.json())\r\n         .then((char) => {\r\n           if (char.name) {\r\n             setCharacter(char);\r\n           } else {\r\n             window.alert(\"No hay personajes con ese ID\");\r\n           }\r\n         })\r\n         .catch((err) => {\r\n           window.alert(\"No hay personajes con ese ID\");\r\n         });\r\n     }, [input]);\r\n\r\n\r\n  return (\r\n    <div>\r\n       <div>\r\n          <img src={character.flag} alt=\"Not found\" />\r\n          <h1>{character.name}</h1>\r\n          <div>\r\n            <h2>Id: {character.id}</h2>\r\n            <h2>Capital: {character.capital}</h2>\r\n            <h2>Continent: {character.continent}</h2>\r\n            <h2>SubRegion: {character.subregion}</h2>\r\n            <h2>Area: {character.area}</h2>\r\n            <h2>Population: {character.population}</h2>\r\n     \r\n          </div>\r\n          {/* {<div>\r\n            {activities?.map((activity) => {\r\n              return (\r\n                <div key={activity.id}>\r\n                  <h2>Activity</h2>\r\n                  <div>\r\n                    <h3>{activity.name}</h3>\r\n                    <h3>Difficulty: {activity.difficulty}</h3>\r\n                    <h3>Duration: {activity.duration}</h3>\r\n                    <h3>Season: {activity.season}</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>} */}\r\n        </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,2CAA2C;AACrE,SAASC,QAAQ,EAAEC,EAAE,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,EAAE;EAE7B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAE,CAAC,CAAC,CAAC;EAEhDS,SAAS,CAAC,MAAM;IACZC,KAAK,CAAC,uCAAuC,GAAGJ,KAAK,CAAC,CACjDK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,IAAI,EAAE;QACbP,YAAY,CAACM,IAAI,CAAC;MACpB,CAAC,MAAM;QACLE,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC9C;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdH,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAGd,oBACEH,OAAA;IAAAiB,QAAA,eACGjB,OAAA;MAAAiB,QAAA,gBACGjB,OAAA;QAAKkB,GAAG,EAAEd,SAAS,CAACe,IAAK;QAACC,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5CxB,OAAA;QAAAiB,QAAA,EAAKb,SAAS,CAACQ;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzBxB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,GAAI,MAAI,EAACb,SAAS,CAACqB,EAAE;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC3BxB,OAAA;UAAAiB,QAAA,GAAI,WAAS,EAACb,SAAS,CAACsB,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACrCxB,OAAA;UAAAiB,QAAA,GAAI,aAAW,EAACb,SAAS,CAACuB,SAAS;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACzCxB,OAAA;UAAAiB,QAAA,GAAI,aAAW,EAACb,SAAS,CAACwB,SAAS;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACzCxB,OAAA;UAAAiB,QAAA,GAAI,QAAM,EAACb,SAAS,CAACyB,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC/BxB,OAAA;UAAAiB,QAAA,GAAI,cAAY,EAACb,SAAS,CAAC0B,UAAU;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEvC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAgBF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEV,CAAC;AAACtB,EAAA,CAtDID,aAAa;EAAA,QACCL,SAAS;AAAA;AAAAmC,EAAA,GADvB9B,aAAa;AAwDnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}