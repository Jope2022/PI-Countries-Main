{"ast":null,"code":"import { kindOf } from './utils/kindOf';\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(`bindActionCreators expected an object or a function, but instead received: '${kindOf(actionCreators)}'. ` + `Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?`);\n  }\n  const boundActionCreators = {};\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}","map":{"version":3,"names":["kindOf","bindActionCreator","actionCreator","dispatch","apply","arguments","bindActionCreators","actionCreators","Error","boundActionCreators","key"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/node_modules/redux/src/bindActionCreators.js"],"sourcesContent":["import { kindOf } from './utils/kindOf'\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments))\n  }\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch)\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\n      `bindActionCreators expected an object or a function, but instead received: '${kindOf(\n        actionCreators\n      )}'. ` +\n        `Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?`\n    )\n  }\n\n  const boundActionCreators = {}\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key]\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch)\n    }\n  }\n  return boundActionCreators\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,SAASC,iBAAiBA,CAACC,aAAa,EAAEC,QAAQ,EAAE;EAClD,OAAO,YAAY;IACjB,OAAOA,QAAQ,CAACD,aAAa,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAC;EACvD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAACC,cAAc,EAAEJ,QAAQ,EAAE;EACnE,IAAI,OAAOI,cAAc,KAAK,UAAU,EAAE;IACxC,OAAON,iBAAiB,CAACM,cAAc,EAAEJ,QAAQ,CAAC;EACpD;EAEA,IAAI,OAAOI,cAAc,KAAK,QAAQ,IAAIA,cAAc,KAAK,IAAI,EAAE;IACjE,MAAM,IAAIC,KAAK,CACZ,+EAA8ER,MAAM,CACnFO,cAAc,CACd,KAAI,GACH,0FAAyF,CAC7F;EACH;EAEA,MAAME,mBAAmB,GAAG,CAAC,CAAC;EAC9B,KAAK,MAAMC,GAAG,IAAIH,cAAc,EAAE;IAChC,MAAML,aAAa,GAAGK,cAAc,CAACG,GAAG,CAAC;IACzC,IAAI,OAAOR,aAAa,KAAK,UAAU,EAAE;MACvCO,mBAAmB,CAACC,GAAG,CAAC,GAAGT,iBAAiB,CAACC,aAAa,EAAEC,QAAQ,CAAC;IACvE;EACF;EACA,OAAOM,mBAAmB;AAC5B"},"metadata":{},"sourceType":"module"}