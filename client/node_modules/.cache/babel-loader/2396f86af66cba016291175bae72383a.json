{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postActivities } from \"../redux/actions\";\nexport const useForm = (initialForm, validateForm) => {\n  _s();\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [Paises, setPaises] = useState([]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleBlur = event => {\n    handleChange(event);\n    setErrors(validateForm(form));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setErrors(validateForm(form));\n    // if (Object.keys(errors).length === 0) {\n\n    //     };\n    Paises.forEach(async element => {\n      console.log({\n        ...form\n      });\n      console.log(element);\n      await dispatch(postActivities({\n        ...form,\n        countryId: element\n      }));\n    });\n    // dispatch(postActivities(form));\n    alert('Activity created');\n    setForm(initialForm);\n    history.push(\"/home\");\n  };\n  const handleSelect = event => {\n    const {\n      value\n    } = event.target;\n    console.log(value);\n    setForm({\n      ...form,\n      countryId: value\n    });\n    setPaises([...Paises, value]);\n    console.log(Paises);\n  };\n  return {\n    form,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleSelect\n  };\n};\n_s(useForm, \"BVuFFINKiJybBPpcSnUKu4WMMfY=\", false, function () {\n  return [useDispatch, useHistory];\n});","map":{"version":3,"names":["useState","useDispatch","useHistory","postActivities","useForm","initialForm","validateForm","_s","form","setForm","errors","setErrors","dispatch","history","Paises","setPaises","handleChange","event","name","value","target","handleBlur","handleSubmit","preventDefault","forEach","element","console","log","countryId","alert","push","handleSelect"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/ActivityCreate/useForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {postActivities} from \"../redux/actions\"\n\n\nexport const useForm = ( initialForm, validateForm ) => {\n    const [form, setForm] = useState(initialForm);\n    const [errors, setErrors] = useState({});\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [Paises, setPaises] = useState([]);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setForm({\n            ...form,\n            [name] : value,\n        });\n    };\n\n    const handleBlur = (event) => {\n        handleChange(event);\n        setErrors(validateForm(form));\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setErrors(validateForm(form));\n        // if (Object.keys(errors).length === 0) {\n                 \n        //     };\n            Paises.forEach(async(element) => {\n                console.log({...form})\n                console.log(element)\n             await dispatch(postActivities({...form, countryId: element}));  \n            }) \n          // dispatch(postActivities(form));\n            alert('Activity created');\n            setForm(initialForm);\n            history.push(\"/home\");\n       \n    };\n\n      const handleSelect = (event) => {\n        const { value } = event.target;\n        console.log(value)\n        setForm({\n            ...form,\n            countryId: value\n        })\n        setPaises([\n            ...Paises,\n            value\n        ])\n        console.log(Paises)\n    }\n\n    return {\n        form,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleSelect\n    }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAAQC,cAAc,QAAO,kBAAkB;AAG/C,OAAO,MAAMC,OAAO,GAAGA,CAAEC,WAAW,EAAEC,YAAY,KAAM;EAAAC,EAAA;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACK,WAAW,CAAC;EAC7C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,OAAO,GAAGX,UAAU,EAAE;EAC5B,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAEpCX,OAAO,CAAC;MACJ,GAAGD,IAAI;MACP,CAACU,IAAI,GAAIC;IACb,CAAC,CAAC;EACN,CAAC;EAED,MAAME,UAAU,GAAIJ,KAAK,IAAK;IAC1BD,YAAY,CAACC,KAAK,CAAC;IACnBN,SAAS,CAACL,YAAY,CAACE,IAAI,CAAC,CAAC;EACjC,CAAC;EAED,MAAMc,YAAY,GAAG,MAAOL,KAAK,IAAK;IAClCA,KAAK,CAACM,cAAc,EAAE;IACtBZ,SAAS,CAACL,YAAY,CAACE,IAAI,CAAC,CAAC;IAC7B;;IAEA;IACIM,MAAM,CAACU,OAAO,CAAC,MAAMC,OAAO,IAAK;MAC7BC,OAAO,CAACC,GAAG,CAAC;QAAC,GAAGnB;MAAI,CAAC,CAAC;MACtBkB,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACvB,MAAMb,QAAQ,CAACT,cAAc,CAAC;QAAC,GAAGK,IAAI;QAAEoB,SAAS,EAAEH;MAAO,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC;IACJ;IACEI,KAAK,CAAC,kBAAkB,CAAC;IACzBpB,OAAO,CAACJ,WAAW,CAAC;IACpBQ,OAAO,CAACiB,IAAI,CAAC,OAAO,CAAC;EAE7B,CAAC;EAEC,MAAMC,YAAY,GAAId,KAAK,IAAK;IAC9B,MAAM;MAAEE;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAC9BM,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IAClBV,OAAO,CAAC;MACJ,GAAGD,IAAI;MACPoB,SAAS,EAAET;IACf,CAAC,CAAC;IACFJ,SAAS,CAAC,CACN,GAAGD,MAAM,EACTK,KAAK,CACR,CAAC;IACFO,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;EACvB,CAAC;EAED,OAAO;IACHN,IAAI;IACJE,MAAM;IACNM,YAAY;IACZK,UAAU;IACVC,YAAY;IACZS;EACJ,CAAC;AACL,CAAC;AAAAxB,EAAA,CA7DYH,OAAO;EAAA,QAGCH,WAAW,EACZC,UAAU;AAAA"},"metadata":{},"sourceType":"module"}