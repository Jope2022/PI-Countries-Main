{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postActivities } from \"../redux/actions\";\nexport const useForm = (initialForm, validateForm) => {\n  _s();\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [Paises, setPaises] = useState([]);\n  const Quitar = id => {\n    setPaises(Paises.filter());\n  };\n  const handleChange = event => {\n    console.log(Paises); //Actualiza el estado from cambios formulario\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleBlur = event => {\n    console.log(event); // se encarga actualizar el estado from y error\n    handleChange(event);\n    setErrors(validateForm(form));\n  };\n  const handleSubmit = event => {\n    // envia los datos del formulario\n    console.log(event);\n    event.preventDefault();\n    setErrors(validateForm(form));\n    if (form.name && form.difficulty && form.duration && form.season && form.countryId && Object.keys(errors).length === 0) {\n      Paises.forEach(pais => {\n        dispatch(postActivities({\n          ...form,\n          countryId: pais\n        }));\n      });\n      alert('Actividad creada');\n      setForm(initialForm);\n      history.push(\"/home\");\n    } else {\n      alert(\"Todos los campos deben ser requeridos\");\n    }\n  };\n  const handleSelect = event => {\n    //actualizar el estado from y paises\n    console.log(event);\n    const {\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      countryId: value\n    });\n    setPaises([...Paises, value]);\n  };\n  return {\n    form,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleSelect,\n    Paises\n  };\n};\n_s(useForm, \"BVuFFINKiJybBPpcSnUKu4WMMfY=\", false, function () {\n  return [useDispatch, useHistory];\n});","map":{"version":3,"names":["useState","useDispatch","useHistory","postActivities","useForm","initialForm","validateForm","_s","form","setForm","errors","setErrors","dispatch","history","Paises","setPaises","Quitar","id","filter","handleChange","event","console","log","name","value","target","handleBlur","handleSubmit","preventDefault","difficulty","duration","season","countryId","Object","keys","length","forEach","pais","alert","push","handleSelect"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/ActivityCreate/useForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {postActivities} from \"../redux/actions\"\n\n\nexport const useForm = ( initialForm, validateForm ) => {\n    const [form, setForm] = useState(initialForm);\n    const [errors, setErrors] = useState({});\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [Paises, setPaises] = useState([]);\n\n    const Quitar = (id) =>{\n        setPaises(Paises.filter())\n        \n    }\n\n\n    const handleChange = (event) => {\n        console.log(Paises)    //Actualiza el estado from cambios formulario\n        const { name, value } = event.target;\n        setForm({\n            ...form,\n            [name] : value,\n        });\n    };\n\n    const handleBlur = (event) => {\n        console.log(event)    // se encarga actualizar el estado from y error\n        handleChange(event);\n        setErrors(validateForm(form));\n    };\n\n    const handleSubmit = (event) => {    // envia los datos del formulario\n        console.log(event)\n        event.preventDefault();\n        setErrors(validateForm(form));\n\n        if (form.name && form.difficulty && form.duration && form.season && form.countryId && Object.keys(errors).length === 0) {\n\n            Paises.forEach(pais=>{\n                dispatch(postActivities({...form, countryId: pais}));\n\n            })\n            alert('Actividad creada');\n            setForm(initialForm);\n            history.push(\"/home\");\n        } else {\n            alert(\"Todos los campos deben ser requeridos\");\n        }\n    };\n\n      const handleSelect = (event) => {  //actualizar el estado from y paises\n        console.log(event)\n        const { value } = event.target;\n        setForm({\n            ...form,\n            countryId: value\n        })\n        setPaises([\n            ...Paises,\n            value\n        ])\n    }\n\n    return {\n        form,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleSelect,\n        Paises        \n    }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAAQC,cAAc,QAAO,kBAAkB;AAG/C,OAAO,MAAMC,OAAO,GAAGA,CAAEC,WAAW,EAAEC,YAAY,KAAM;EAAAC,EAAA;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACK,WAAW,CAAC;EAC7C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,OAAO,GAAGX,UAAU,EAAE;EAC5B,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,MAAM,GAAIC,EAAE,IAAI;IAClBF,SAAS,CAACD,MAAM,CAACI,MAAM,EAAE,CAAC;EAE9B,CAAC;EAGD,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC,EAAI;IACvB,MAAM;MAAES,IAAI;MAAEC;IAAM,CAAC,GAAGJ,KAAK,CAACK,MAAM;IACpChB,OAAO,CAAC;MACJ,GAAGD,IAAI;MACP,CAACe,IAAI,GAAIC;IACb,CAAC,CAAC;EACN,CAAC;EAED,MAAME,UAAU,GAAIN,KAAK,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,EAAI;IACtBD,YAAY,CAACC,KAAK,CAAC;IACnBT,SAAS,CAACL,YAAY,CAACE,IAAI,CAAC,CAAC;EACjC,CAAC;EAED,MAAMmB,YAAY,GAAIP,KAAK,IAAK;IAAK;IACjCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBA,KAAK,CAACQ,cAAc,EAAE;IACtBjB,SAAS,CAACL,YAAY,CAACE,IAAI,CAAC,CAAC;IAE7B,IAAIA,IAAI,CAACe,IAAI,IAAIf,IAAI,CAACqB,UAAU,IAAIrB,IAAI,CAACsB,QAAQ,IAAItB,IAAI,CAACuB,MAAM,IAAIvB,IAAI,CAACwB,SAAS,IAAIC,MAAM,CAACC,IAAI,CAACxB,MAAM,CAAC,CAACyB,MAAM,KAAK,CAAC,EAAE;MAEpHrB,MAAM,CAACsB,OAAO,CAACC,IAAI,IAAE;QACjBzB,QAAQ,CAACT,cAAc,CAAC;UAAC,GAAGK,IAAI;UAAEwB,SAAS,EAAEK;QAAI,CAAC,CAAC,CAAC;MAExD,CAAC,CAAC;MACFC,KAAK,CAAC,kBAAkB,CAAC;MACzB7B,OAAO,CAACJ,WAAW,CAAC;MACpBQ,OAAO,CAAC0B,IAAI,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM;MACHD,KAAK,CAAC,uCAAuC,CAAC;IAClD;EACJ,CAAC;EAEC,MAAME,YAAY,GAAIpB,KAAK,IAAK;IAAG;IACjCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAM;MAAEI;IAAM,CAAC,GAAGJ,KAAK,CAACK,MAAM;IAC9BhB,OAAO,CAAC;MACJ,GAAGD,IAAI;MACPwB,SAAS,EAAER;IACf,CAAC,CAAC;IACFT,SAAS,CAAC,CACN,GAAGD,MAAM,EACTU,KAAK,CACR,CAAC;EACN,CAAC;EAED,OAAO;IACHhB,IAAI;IACJE,MAAM;IACNS,YAAY;IACZO,UAAU;IACVC,YAAY;IACZa,YAAY;IACZ1B;EACJ,CAAC;AACL,CAAC;AAAAP,EAAA,CArEYH,OAAO;EAAA,QAGCH,WAAW,EACZC,UAAU;AAAA"},"metadata":{},"sourceType":"module"}