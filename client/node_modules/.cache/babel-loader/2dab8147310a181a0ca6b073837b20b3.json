{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopep\\\\Desktop\\\\PI-Countries-Main\\\\PI-Countries-main\\\\client\\\\src\\\\Components\\\\CountryDetail\\\\countryDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetail = _ref => {\n  _s();\n  let {\n    id,\n    name,\n    flag,\n    continent,\n    capital,\n    population,\n    area,\n    subregion\n  } = _ref;\n  const {\n    input\n  } = useParams();\n  const [character, setCharacter] = useState({});\n\n  // useEffect(() => {\n  //     fetch('http://localhost:3001/countries?name=' + input)\n  //         .then((response) => response.json())\n  //         .then((char) => {\n  //           if (char.name) {\n  //             setCharacter(char);\n  //           } else {\n  //             window.alert(\"No hay personajes con ese ID\");\n  //           }\n  //         })\n  //         .catch((err) => {\n  //           window.alert(\"No hay personajes con ese ID\");\n  //         });\n  //     }, [input]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.flag,\n        alt: \"Not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Id: \", character.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Capital: \", character.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Continent: \", character.continent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"SubRegion: \", character.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Area: \", character.area]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Population: \", character.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryDetail, \"0Uy1nolQfqbYbCnxO0aF2emujeA=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetail;\nexport default CountryDetail;\nvar _c;\n$RefreshReg$(_c, \"CountryDetail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","CountryDetail","_ref","_s","id","name","flag","continent","capital","population","area","subregion","input","character","setCharacter","useState","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/CountryDetail/countryDetail.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\n\r\nconst CountryDetail = ({id, name, flag, continent, capital, population, area, subregion}) => {\r\n  const { input } = useParams()\r\n  \r\n  const [character, setCharacter] = useState( {}); \r\n\r\n// useEffect(() => {\r\n//     fetch('http://localhost:3001/countries?name=' + input)\r\n//         .then((response) => response.json())\r\n//         .then((char) => {\r\n//           if (char.name) {\r\n//             setCharacter(char);\r\n//           } else {\r\n//             window.alert(\"No hay personajes con ese ID\");\r\n//           }\r\n//         })\r\n//         .catch((err) => {\r\n//           window.alert(\"No hay personajes con ese ID\");\r\n//         });\r\n//     }, [input]);\r\n\r\n\r\n  return (\r\n    <div>\r\n       <div>\r\n          <img src={character.flag} alt=\"Not found\" />\r\n          <h1>{character.name}</h1>\r\n          <div>\r\n            <h2>Id: {character.id}</h2>\r\n            <h2>Capital: {character.capital}</h2>\r\n            <h2>Continent: {character.continent}</h2>\r\n            <h2>SubRegion: {character.subregion}</h2>\r\n            <h2>Area: {character.area}</h2>\r\n            <h2>Population: {character.population}</h2>\r\n     \r\n          </div>\r\n          {/* {<div>\r\n            {activities?.map((activity) => {\r\n              return (\r\n                <div key={activity.id}>\r\n                  <h2>Activity</h2>\r\n                  <div>\r\n                    <h3>{activity.name}</h3>\r\n                    <h3>Difficulty: {activity.difficulty}</h3>\r\n                    <h3>Duration: {activity.duration}</h3>\r\n                    <h3>Season: {activity.season}</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>} */}\r\n        </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItE,MAAMC,aAAa,GAAGC,IAAA,IAAuE;EAAAC,EAAA;EAAA,IAAtE;IAACC,EAAE;IAAEC,IAAI;IAAEC,IAAI;IAAEC,SAAS;IAAEC,OAAO;IAAEC,UAAU;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAAT,IAAA;EACtF,MAAM;IAAEU;EAAM,CAAC,GAAGd,SAAS,EAAE;EAE7B,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAE,CAAC,CAAC,CAAC;;EAEjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGE,oBACEf,OAAA;IAAAgB,QAAA,eACGhB,OAAA;MAAAgB,QAAA,gBACGhB,OAAA;QAAKiB,GAAG,EAAEJ,SAAS,CAACP,IAAK;QAACY,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5CtB,OAAA;QAAAgB,QAAA,EAAKH,SAAS,CAACR;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzBtB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,GAAI,MAAI,EAACH,SAAS,CAACT,EAAE;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC3BtB,OAAA;UAAAgB,QAAA,GAAI,WAAS,EAACH,SAAS,CAACL,OAAO;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACrCtB,OAAA;UAAAgB,QAAA,GAAI,aAAW,EAACH,SAAS,CAACN,SAAS;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACzCtB,OAAA;UAAAgB,QAAA,GAAI,aAAW,EAACH,SAAS,CAACF,SAAS;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACzCtB,OAAA;UAAAgB,QAAA,GAAI,QAAM,EAACH,SAAS,CAACH,IAAI;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC/BtB,OAAA;UAAAgB,QAAA,GAAI,cAAY,EAACH,SAAS,CAACJ,UAAU;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEvC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAgBF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEV,CAAC;AAACnB,EAAA,CAtDIF,aAAa;EAAA,QACCH,SAAS;AAAA;AAAAyB,EAAA,GADvBtB,aAAa;AAwDnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}