{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopep\\\\Desktop\\\\PI-Countries-Main\\\\PI-Countries-main\\\\client\\\\src\\\\Components\\\\Actions\\\\index.jsx\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\nexport const SEARCH_COUNTRIES = \"SEARCH_COUNTRIES\";\nexport const GET_DETAIL = \"GET_DETAIL\";\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\nexport const POST_ACTIVITIES = \"POST_ACTIVITIES\";\nexport const FILTER_BY_CONTINENT = \"FILTER_BY_CONTINENT\";\nexport const FILTER_BY_ACTIVITIES = \"FILTER_BY_ACTIVITIES\";\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\nexport const ORDER_BY_POPULATION = \"ORDER_BY_POPULATION\";\nexport const getCountries = () => {\n  return async dispatch => {\n    try {\n      const requestCountries = await axios.get('http://localhost:3001/countries');\n      return dispatch({\n        type: GET_COUNTRIES,\n        payload: requestCountries.data\n      });\n    } catch (error) {\n      alert('Los países de la api no funcionan');\n      console.log(error);\n    }\n  };\n};\nexport const searchCountries = input => {\n  return async dispatch => {\n    try {\n      const search = await axios.get('http://localhost:3001/countries?name=' + input);\n      return dispatch({\n        type: SEARCH_COUNTRIES,\n        payload: search.data\n      });\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Country, {\n          name: \"Argentina\",\n          flag: \"https://restcountries.com/data/arg.svg\",\n          capital: \"Buenos Aires\",\n          continent: \"South America\",\n          poblation: \"45,195,774\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    } catch (error) {\n      alert('El pais no se encuentra');\n      console.log(error);\n    }\n  };\n};\nexport const getDetail = id => {\n  return async dispatch => {\n    try {\n      const detail = await axios.get('http://localhost:3001/countries/' + id);\n      return dispatch({\n        type: GET_DETAIL,\n        payload: detail.data\n      });\n    } catch (error) {\n      alert('Algo salió mal con la solicitud detallada');\n      console.log(error);\n    }\n  };\n};\nexport const getActivities = () => {\n  return async dispatch => {\n    try {\n      const activities = await axios.get('http://localhost:3001/activity');\n      return dispatch({\n        type: GET_ACTIVITIES,\n        payload: activities.data\n      });\n    } catch (error) {\n      alert('Algo salió mal con la solicitud de actividad');\n      console.log(error);\n    }\n  };\n};\nexport const postActivities = payload => {\n  return async dispatch => {\n    await axios.post('http://localhost:3001/activity', payload);\n    return dispatch({\n      type: POST_ACTIVITIES\n    });\n  };\n};\nexport const filterByContinent = payload => {\n  return {\n    type: FILTER_BY_CONTINENT,\n    payload\n  };\n};\nexport const filterByActivity = payload => {\n  return {\n    type: FILTER_BY_ACTIVITIES,\n    payload\n  };\n};\nexport const orderByName = payload => {\n  return {\n    type: ORDER_BY_NAME,\n    payload\n  };\n};\nexport const orderByPopulation = payload => {\n  return {\n    type: ORDER_BY_POPULATION,\n    payload\n  };\n};","map":{"version":3,"names":["axios","jsxDEV","_jsxDEV","GET_COUNTRIES","SEARCH_COUNTRIES","GET_DETAIL","GET_ACTIVITIES","POST_ACTIVITIES","FILTER_BY_CONTINENT","FILTER_BY_ACTIVITIES","ORDER_BY_NAME","ORDER_BY_POPULATION","getCountries","dispatch","requestCountries","get","type","payload","data","error","alert","console","log","searchCountries","input","search","children","Country","name","flag","capital","continent","poblation","fileName","_jsxFileName","lineNumber","columnNumber","getDetail","id","detail","getActivities","activities","postActivities","post","filterByContinent","filterByActivity","orderByName","orderByPopulation"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/Actions/index.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\r\nexport const SEARCH_COUNTRIES = \"SEARCH_COUNTRIES\";\r\nexport const GET_DETAIL = \"GET_DETAIL\";\r\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\r\nexport const POST_ACTIVITIES = \"POST_ACTIVITIES\";\r\nexport const FILTER_BY_CONTINENT = \"FILTER_BY_CONTINENT\";\r\nexport const FILTER_BY_ACTIVITIES = \"FILTER_BY_ACTIVITIES\";\r\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\r\nexport const ORDER_BY_POPULATION = \"ORDER_BY_POPULATION\";\r\n\r\nexport const getCountries = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const requestCountries = await axios.get('http://localhost:3001/countries')\r\n            return dispatch({\r\n                type: GET_COUNTRIES,\r\n                payload: requestCountries.data\r\n            });\r\n        } catch (error) {\r\n            alert('Los países de la api no funcionan');\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const searchCountries = (input) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const search = await axios.get('http://localhost:3001/countries?name=' + input)\r\n            return dispatch({\r\n                type: SEARCH_COUNTRIES,\r\n                payload: search.data\r\n         \r\n            });\r\n            <div>\r\n            <Country\r\n              name=\"Argentina\"\r\n              flag=\"https://restcountries.com/data/arg.svg\"\r\n              capital=\"Buenos Aires\"\r\n              continent=\"South America\"\r\n              poblation=\"45,195,774\"\r\n            />\r\n          </div>;\r\n        } catch (error) {\r\n            alert('El pais no se encuentra')\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getDetail = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const detail = await axios.get('http://localhost:3001/countries/' + id);\r\n            return dispatch({\r\n                type: GET_DETAIL,\r\n                payload: detail.data\r\n            })\r\n        } catch (error) {\r\n            alert('Algo salió mal con la solicitud detallada')\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const  getActivities = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const activities = await axios.get('http://localhost:3001/activity');\r\n            return dispatch({\r\n                type: GET_ACTIVITIES,\r\n                payload: activities.data\r\n            })\r\n        } catch (error) {\r\n            alert('Algo salió mal con la solicitud de actividad')\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nexport const postActivities = (payload) => {\r\n    return async (dispatch) => {\r\n        await axios.post('http://localhost:3001/activity', payload);\r\n        return dispatch({\r\n            type: POST_ACTIVITIES,\r\n        })\r\n    }\r\n}\r\nexport const filterByContinent = (payload) => {\r\n    return {\r\n        type: FILTER_BY_CONTINENT,\r\n        payload\r\n    }\r\n}\r\nexport const filterByActivity = (payload) => {\r\n    return {\r\n        type: FILTER_BY_ACTIVITIES,\r\n        payload\r\n    }\r\n}\r\nexport const orderByName = (payload) => {\r\n    return {\r\n        type: ORDER_BY_NAME,\r\n        payload\r\n    }\r\n}\r\nexport const orderByPopulation = (payload) => {\r\n    return {\r\n        type: ORDER_BY_POPULATION,\r\n        payload\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAC9B,OAAO,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMC,gBAAgB,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC;MAC3E,OAAOF,QAAQ,CAAC;QACZG,IAAI,EAAEb,aAAa;QACnBc,OAAO,EAAEH,gBAAgB,CAACI;MAC9B,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,KAAK,CAAC,mCAAmC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAGD,OAAO,MAAMI,eAAe,GAAIC,KAAK,IAAK;EACtC,OAAO,MAAOX,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMY,MAAM,GAAG,MAAMzB,KAAK,CAACe,GAAG,CAAC,uCAAuC,GAAGS,KAAK,CAAC;MAC/E,OAAOX,QAAQ,CAAC;QACZG,IAAI,EAAEZ,gBAAgB;QACtBa,OAAO,EAAEQ,MAAM,CAACP;MAEpB,CAAC,CAAC;MACF,aAAAhB,OAAA;QAAAwB,QAAA,eACAxB,OAAA,CAACyB,OAAO;UACNC,IAAI,EAAC,WAAW;UAChBC,IAAI,EAAC,wCAAwC;UAC7CC,OAAO,EAAC,cAAc;UACtBC,SAAS,EAAC,eAAe;UACzBC,SAAS,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACtB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IACR,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZC,KAAK,CAAC,yBAAyB,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMkB,SAAS,GAAIC,EAAE,IAAK;EAC7B,OAAO,MAAOzB,QAAQ,IAAK;IACvB,IAAI;MACA,MAAM0B,MAAM,GAAG,MAAMvC,KAAK,CAACe,GAAG,CAAC,kCAAkC,GAAGuB,EAAE,CAAC;MACvE,OAAOzB,QAAQ,CAAC;QACZG,IAAI,EAAEX,UAAU;QAChBY,OAAO,EAAEsB,MAAM,CAACrB;MACpB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,KAAK,CAAC,2CAA2C,CAAC;MAClDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAOqB,aAAa,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAO3B,QAAQ,IAAK;IACvB,IAAI;MACA,MAAM4B,UAAU,GAAG,MAAMzC,KAAK,CAACe,GAAG,CAAC,gCAAgC,CAAC;MACpE,OAAOF,QAAQ,CAAC;QACZG,IAAI,EAAEV,cAAc;QACpBW,OAAO,EAAEwB,UAAU,CAACvB;MACxB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,KAAK,CAAC,8CAA8C,CAAC;MACrDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMuB,cAAc,GAAIzB,OAAO,IAAK;EACvC,OAAO,MAAOJ,QAAQ,IAAK;IACvB,MAAMb,KAAK,CAAC2C,IAAI,CAAC,gCAAgC,EAAE1B,OAAO,CAAC;IAC3D,OAAOJ,QAAQ,CAAC;MACZG,IAAI,EAAET;IACV,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AACD,OAAO,MAAMqC,iBAAiB,GAAI3B,OAAO,IAAK;EAC1C,OAAO;IACHD,IAAI,EAAER,mBAAmB;IACzBS;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAM4B,gBAAgB,GAAI5B,OAAO,IAAK;EACzC,OAAO;IACHD,IAAI,EAAEP,oBAAoB;IAC1BQ;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAM6B,WAAW,GAAI7B,OAAO,IAAK;EACpC,OAAO;IACHD,IAAI,EAAEN,aAAa;IACnBO;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAM8B,iBAAiB,GAAI9B,OAAO,IAAK;EAC1C,OAAO;IACHD,IAAI,EAAEL,mBAAmB;IACzBM;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}