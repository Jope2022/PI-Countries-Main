{"ast":null,"code":"import compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n  return createStore => function () {\n    const store = createStore(...arguments);\n    let dispatch = () => {\n      throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n    };\n    const middlewareAPI = {\n      getState: store.getState,\n      dispatch: function () {\n        return dispatch(...arguments);\n      }\n    };\n    const chain = middlewares.map(middleware => middleware(middlewareAPI));\n    dispatch = compose(...chain)(store.dispatch);\n    return {\n      ...store,\n      dispatch\n    };\n  };\n}","map":{"version":3,"names":["compose","applyMiddleware","_len","arguments","length","middlewares","Array","_key","createStore","store","dispatch","Error","middlewareAPI","getState","chain","map","middleware"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/node_modules/redux/src/applyMiddleware.js"],"sourcesContent":["import compose from './compose'\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware(...middlewares) {\n  return (createStore) => (...args) => {\n    const store = createStore(...args)\n    let dispatch = () => {\n      throw new Error(\n        'Dispatching while constructing your middleware is not allowed. ' +\n          'Other middleware would not be applied to this dispatch.'\n      )\n    }\n\n    const middlewareAPI = {\n      getState: store.getState,\n      dispatch: (...args) => dispatch(...args),\n    }\n    const chain = middlewares.map((middleware) => middleware(middlewareAPI))\n    dispatch = compose(...chain)(store.dispatch)\n\n    return {\n      ...store,\n      dispatch,\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,eAAeA,CAAA,EAAiB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAbC,WAAW,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAXF,WAAW,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACpD,OAAQC,WAAW,IAAK,YAAa;IACnC,MAAMC,KAAK,GAAGD,WAAW,CAAC,GAAAL,SAAO,CAAC;IAClC,IAAIO,QAAQ,GAAGA,CAAA,KAAM;MACnB,MAAM,IAAIC,KAAK,CACb,iEAAiE,GAC/D,yDAAyD,CAC5D;IACH,CAAC;IAED,MAAMC,aAAa,GAAG;MACpBC,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;MACxBH,QAAQ,EAAE,SAAAA,CAAA;QAAA,OAAaA,QAAQ,CAAC,GAAAP,SAAO,CAAC;MAAA;IAC1C,CAAC;IACD,MAAMW,KAAK,GAAGT,WAAW,CAACU,GAAG,CAAEC,UAAU,IAAKA,UAAU,CAACJ,aAAa,CAAC,CAAC;IACxEF,QAAQ,GAAGV,OAAO,CAAC,GAAGc,KAAK,CAAC,CAACL,KAAK,CAACC,QAAQ,CAAC;IAE5C,OAAO;MACL,GAAGD,KAAK;MACRC;IACF,CAAC;EACH,CAAC;AACH"},"metadata":{},"sourceType":"module"}