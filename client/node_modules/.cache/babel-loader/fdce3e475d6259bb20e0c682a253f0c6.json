{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopep\\\\Desktop\\\\PI-Countries-Main\\\\PI-Countries-main\\\\client\\\\src\\\\Components\\\\CountryDetail\\\\countryDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetail = () => {\n  _s();\n  var _character$activities;\n  const {\n    id\n  } = useParams();\n  const [character, setCharacter] = useState({\n    name: \"\",\n    glag: \"\",\n    continent: \"\",\n    capital: \"\",\n    population: \"\",\n    area: \"\",\n    subregion: \"\"\n  });\n  useEffect(() => {\n    fetch('http://localhost:3001/countries/' + id).then(response => response.json()).then(char => {\n      if (char.name) {\n        setCharacter(char);\n      } else {\n        window.alert(\"No hay personajes con ese ID\");\n      }\n    }).catch(err => {\n      window.alert(\"No hay personajes con ese ID\");\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.flag,\n        alt: \"Not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Id: \", character.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Capital: \", character.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Continent: \", character.continent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"SubRegion: \", character.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Area: \", character.area]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Population: \", character.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (_character$activities = character.activities) === null || _character$activities === void 0 ? void 0 : _character$activities.map(activity => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: activity.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Difficulty: \", activity.difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Duration: \", activity.duration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Season: \", activity.season]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)]\n          }, activity.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryDetail, \"JVBE8EfRYz/8nRaSwBnS9Mt8sQU=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetail;\nexport default CountryDetail;\nvar _c;\n$RefreshReg$(_c, \"CountryDetail\");","map":{"version":3,"names":["React","useParams","useState","useEffect","jsxDEV","_jsxDEV","CountryDetail","_s","_character$activities","id","character","setCharacter","name","glag","continent","capital","population","area","subregion","fetch","then","response","json","char","window","alert","catch","err","children","src","flag","alt","fileName","_jsxFileName","lineNumber","columnNumber","activities","map","activity","difficulty","duration","season","_c","$RefreshReg$"],"sources":["C:/Users/jopep/Desktop/PI-Countries-Main/PI-Countries-main/client/src/Components/CountryDetail/countryDetail.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst CountryDetail = () => {\r\n  const { id } = useParams()\r\n  \r\n  const [character, setCharacter] = useState( {\r\n    name:\"\",\r\n    glag:\"\",\r\n    continent:\"\",\r\n    capital:\"\",\r\n    population:\"\",\r\n    area:\"\",\r\n    subregion:\"\", \r\n  }); \r\n\r\n useEffect(() => {\r\n     fetch('http://localhost:3001/countries/' + id)\r\n         .then((response) => response.json())\r\n         .then((char) => {\r\n           if (char.name) {\r\n             setCharacter(char);\r\n           } else {\r\n             window.alert(\"No hay personajes con ese ID\");\r\n           }\r\n         })\r\n         .catch((err) => {\r\n           window.alert(\"No hay personajes con ese ID\");\r\n         });\r\n     }, [id]);\r\n\r\n\r\n  return (\r\n    <div>\r\n       <div>\r\n          <img src={character.flag} alt=\"Not found\" />\r\n          <h1>{character.name}</h1>\r\n          <div>\r\n            <h2>Id: {character.id}</h2>\r\n            <h2>Capital: {character.capital}</h2>\r\n            <h2>Continent: {character.continent}</h2>\r\n            <h2>SubRegion: {character.subregion}</h2>\r\n            <h2>Area: {character.area}</h2>\r\n            <h2>Population: {character.population}</h2>\r\n     \r\n          </div>\r\n          {<div>\r\n            {character.activities?.map((activity) => {\r\n              return (\r\n                <div key={activity.id}>\r\n                  <h2>Activity</h2>\r\n                  <div>\r\n                    <h3>{activity.name}</h3>\r\n                    <h3>Difficulty: {activity.difficulty}</h3>\r\n                    <h3>Duration: {activity.duration}</h3>\r\n                    <h3>Season: {activity.season}</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>} \r\n        </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}